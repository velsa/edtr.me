#
# Nginx config file for edtr.me
# Allows to serve dynamic content
# Serves static content for main site, user subdomains and custom user domains
# Config docs: 
#	https://calomel.org/nginx.html
#	http://wiki.nginx.org/
#

pid        logs/nginx.pid;
#user       www-data www-data;
worker_processes        1;  # Set this to number of CPUs minus 1
# Max number of file descriptors (runs `ulimit -n`, default 1024)
#worker_rlimit_nofile 1024; 

events {
	# Max number of client conns handled by each worker (default 1024)
    worker_connections  1024;
}

## Deny access to any host other than (www.)mydomain.com. Only use this
## option is you want to lock down the name in the Host header the client sends. 
# server {
#      server_name  _;  #default
#      return 444;
#  }


http {
    log_format  main  '$remote_addr($host) - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent $request_time "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

	## Size Limits
	client_max_body_size      	10m;
	client_body_buffer_size   	256k;
	client_header_buffer_size 	1k;
	#large_client_header_buffers 4 4k/8k;
	output_buffers 			    4 32k;
	postpone_output 	        1460;

	# Request limits
	#limit_req_zone  $binary_remote_addr  zone=gulag:1m   rate=60r/m;

	## Timeouts
	client_header_timeout 		3m;
	client_body_timeout 		3m;
	send_timeout 				3m;
	keepalive_timeout           300 300;
	#keepalive_timeout 			75 20;

	## General Options
	charset                     utf-8;
	#charset 				    koi8-r;
	include                     mime.types;
	default_type                application/octet-stream;
	ignore_invalid_headers      on;
	keepalive_requests          20;
	#keepalive_disable          msie6;
	#max_ranges                 0;
	#open_file_cache            max=1000 inactive=1h;
	#open_file_cache_errors     on;
	#open_file_cache_min_uses   3;
	#open_file_cache_valid      1m;
	#recursive_error_pages      on;
	server_tokens               off;
	#server_name_in_redirect    on;
	source_charset              utf-8;

	sendfile                	on;
	tcp_nodelay             	on;
	tcp_nopush          		on;

	## Compression
	gzip                        on;
	#gzip_static                on;
	#gzip_buffers               16 8k;
	#gzip_comp_level            1;
	#gzip_http_version          1.0;
	gzip_min_length   			1100;
	#gzip_types        			text/plain text/html application/x-javascript text/css;							# image/x-icon image/bmp;
	#gzip_vary                  on;

	# Proxy
	proxy_connect_timeout 		90;
	proxy_send_timeout 			90;
	proxy_read_timeout 			90;
	proxy_buffer_size 			64k;
	proxy_buffers 				4 128k;
	proxy_busy_buffers_size 	256k;
	proxy_temp_file_write_size 	256k;

	# Error pages
	proxy_intercept_errors 		on;
	error_page                  500 502 503 504 403 /403.html;
	error_page                  401 /401.html;
	error_page                  404 /404.html;
	error_page                  400 /400.html;

	# Misc
	#log_not_found 				off;
	autoindex_exact_size 		off;
	
	#
	# Tornado - handles all async requests
	#
	upstream tornado {
		server                  edtr.me:9999;
	}

	#
	# Main server
	#
    server {
		# Always redirect to edtr.me
        listen                  80;
        server_name             www.edtr.me;
		rewrite                 ^ $scheme://edtr.me$request_uri redirect;
	}
    server {
        listen                  80;
        server_name             edtr.me;
		# The way git and django is setup, should point to $git_root/www
		root                    "/edtr.me/site/www";
		# Should point to the same location as Subdomains
		location ~* /users/.* {
			root        "/var/www";
			expires     30d;
			break;
		}
		include nginx-edtr.conf;
    }

	#
	# Subdomains
	#
    server {
        listen          80;
        server_name     ~^(?<SUBDOMAIN>([a-z0-9-\.]+))\.edtr\.me$;
		root            "/var/www/users/$SUBDOMAIN";
		include         nginx-user.conf;
    }

	#
	# Custom user domains
	#
	# Always redirect to custom domain without 'www.'
    server {
        listen          80;
		server_name     ~^www.(?<USER_DOMAIN>(.*))$;
		rewrite         ^ $scheme://$USER_DOMAIN:80$request_uri redirect;
    }
    server {
        listen          80;
		server_name     ~^(?<USER_DOMAIN>(.*))$;
		root            "/var/www/domains/$USER_DOMAIN";
		include         nginx-domain.conf;
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:80;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
